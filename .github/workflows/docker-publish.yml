name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  # push:
    # branches: [ "main" ]
    # Publish semver tags as releases.
    # tags: [ 'v*.*.*' ]
  release:
    types: [published]
  pull_request:
    branches: [ "main" ]

env:
  DOCKERHUB_USERNAME: ${{ vars.DOCKERHUB_USERNAME }}
  IMAGE_NAME: ${{ vars.IMAGE_NAME }}
  REGISTRY: ${{ vars.REGISTRY }}

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      # TODO enable once the repo goes public
      # - name: Install cosign
        # if: github.event_name != 'pull_request'
        # uses: sigstore/cosign-installer@f3c664df7af409cb4873aa5068053ba9d61a57b6 #v2.6.0
        # with:
          # cosign-release: 'v1.11.0'


      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@6a25f988bdfa969e96a38fc9f843ea31e0b5df27

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into GH registry (ghcr.io)
        if: github.event_name != 'pull_request'  
        uses: docker/login-action@327cd5a69de6c009b9ce71bce8395f28e651bf99
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log into Docker Hub registry 
        if: github.event_name != 'pull_request' && env.DOCKERHUB_USERNAME != ''
        uses: docker/login-action@327cd5a69de6c009b9ce71bce8395f28e651bf99
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      # 1st image name is for GH package repo
      # 2nd image name is for DockerHub image
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@8e1d5461f02b7886d3c1a774bfbd873650445aa2
        with: 
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}


      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@67a2d409c0a876cbe6b11854e3e25193efe4e62d
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

    # Extract metadata (tags, labels) for Docker
    # https://github.com/docker/metadata-action
    # 1st image name is for GH package repo
    # 2nd image name is for DockerHub image
      - name: Extract Docker metadata - alpine
        id: meta-alpine
        uses: docker/metadata-action@8e1d5461f02b7886d3c1a774bfbd873650445aa2
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: prefix=alpine-,onlatest=true

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image - alpine
        id: build-and-push-alpine
        uses: docker/build-push-action@67a2d409c0a876cbe6b11854e3e25193efe4e62d
        with:
          context: .
          target: alpine-release
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-alpine.outputs.tags }}
          labels: ${{ steps.meta-alpine.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max


      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      # TODO enable once the repo goes public
      # - name: Sign the published Docker image
        # if: ${{ github.event_name != 'pull_request' }}
        # env:
          # COSIGN_EXPERIMENTAL: "true"
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        # run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push.outputs.digest }}

